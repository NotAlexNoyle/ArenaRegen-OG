plugins {

    id 'java' // Tell gradle this is a java project.
    id 'com.github.johnrengelman.shadow' version '8.1.1' // Import utility to package libraries into .jar file.
    id 'eclipse'  // Import eclipse plugin for IDE integration. 
    id 'org.jetbrains.kotlin.jvm' version '1.9.23' // Import kotlin jvm plugin for kotlin/java integration.

}

group = 'net.trueog.kotlintemplate-og' // Declare bundle identifier.
version = '2.0'

def apiVersion = "1.19" // Declare minecraft server target version.
def targetJavaVersion = 17 // Declare java compatibility minimum.

processResources {

    def props = [
        version: version,
        apiVersion: apiVersion,
    ]

    inputs.properties props // Indicates to rerun if version changes.

    filesMatching("plugin.yml") {

        expand props

    }

}

repositories {

    mavenCentral()

    maven {

        url "https://repo.purpurmc.org/snapshots" // Get purpur API from purpur maven repository.

    }

}

dependencies {

    compileOnly "org.purpurmc.purpur:purpur-api:1.19.4-R0.1-SNAPSHOT" // Declare purpur API version to be packaged.
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8" // Declare kotlin library to be packaged.

}

shadowJar {

    minimize()
    
}

jar.dependsOn shadowJar

tasks.jar.configure {

    archiveClassifier = "part"

}

tasks.shadowJar.configure {

    archiveClassifier = null

}

tasks.withType(JavaCompile).configureEach {

    options.compilerArgs += ["-parameters"]
    options.encoding = 'UTF-8' // Override the system character set with a universal set.
    options.fork = true // Enable compilation in a separate daemon process.

}
kotlin {
    jvmToolchain(17)
}
